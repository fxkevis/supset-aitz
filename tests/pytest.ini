[tool:pytest]
# Pytest configuration for AI Browser Agent tests

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for complete workflows
    security: Security validation tests
    browser: Browser automation tests
    email: Email management workflow tests
    ordering: Online ordering workflow tests
    slow: Tests that take longer to run
    requires_network: Tests that require network access
    requires_browser: Tests that require actual browser instance

# Test output configuration
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10

# Async test configuration
asyncio_mode = auto

# Coverage configuration (if pytest-cov is available)
# --cov=ai_browser_agent
# --cov-report=html
# --cov-report=term-missing
# --cov-fail-under=80

# Timeout configuration (if pytest-timeout is available)
timeout = 300
timeout_method = thread

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:selenium.*